Wed Jul 12 10:27:11 2000  Gary Wong  <gary@cs.arizona.edu>

	* gtkgame.c (HandleXAction): Recursive event handling is now
	implemented again.  More GTK changes.  The GTK port should now
	be more functional than the old X one.

Tue Jul 11 13:44:49 2000  Gary Wong  <gary@cs.arizona.edu>

	* gtkgame.c: New file.  More extensive changes elsewhere.

Mon Jul 10 09:54:48 2000  Gary Wong  <gary@cs.arizona.edu>

	* gtkboard.c: New file.  Extensive changes elsewhere for GTK port.

Mon Jul 10 09:40:11 2000  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c: Expanded "help" command.

	* set.c (CommandSetDice): Allow dice to be entered without
	space in between.
	
	* play.c (ComputerTurn): Don't add move to game if interrupted.

Wed Jul  5 12:55:35 2000  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (CommandShowGame): More work on saving.
	
	* show.c: Added several missing "show" commands.

	* eval.c (EvaluatePositionCache): Add more information to the
	hash key, to avoid cache collisions between evaluations with
	different parameters.

	* drawboard.c (FormatMovePlain): Output Jellyfish compatible
	point numbers.

Thu Jun 29 19:03:57 2000  Gary Wong  <gary@cs.arizona.edu>

	* eval.c: Added positionclass parameter to evaluation functions to
	allow consistent evaluations across different moves.
	* set.c (CommandSetEvalConsistency): New function.

Mon Jun 26 12:21:17 2000  Gary Wong  <gary@cs.arizona.edu>

	* show.c (CommandShowDelay): new function (patch supplied
	by Eric Augustine).

Mon Jun 19 20:39:36 2000  Oystein Johansen <oeysteij@online.no>

        * rollout.c: Fixed Cygwin bug

        * Makefile.am: Changed the linking order of the X11 libraries
        to make it easyer to compile for Win32/Cygwin

        * /lib/rand_r.h: Don't include the prototype in Cygwin
 
Tue Jun 13 10:47:36 2000  Gary Wong  <gary@cs.arizona.edu>

	* show.c (CommandShowThorp): deleted duplicate line.

Mon Jun 12 09:29:30 2000  Gary Wong  <gary@cs.arizona.edu>

	Bug report from Sam Pottle:
	
	* rollout.c (BasicRollout): remove `+1' from dice parameters to
	FindBestMove.

	* kleinman.c: all occurrences of `Kleinmann' renamed to `Kleinman'.

Tue May  9 12:10:58 2000  Joern Thyssen  <joern@thyssen.nu>

	* gnubg.c (main,StdinReadNotify): Chop the newline returned
        from the fgets call, otherwise many 'set' commands won't work
        on machines without libreadline.

Thu May  4 14:05:33 2000  Joseph Heled  <pepe@internet.co.nz>

	* eval.c: Changed net inputs. Removed uncontributing ones, added
	2 new ones (I_TIMING and I_BACKBONE). New weights as well. 

Thu May 4 14:25:00 2000  Joern Thyssen  <joern@thyssen.nu>

	* backgammon.h, eval.c, eval.h, set.c, show.c: implementation of
	reduced 2+ ply searches.

Mon Apr 10 14:13:37 2000  Gary Wong  <gary@cs.arizona.edu>

	* makeweights.c (main): use binary mode on stdout, if possible,
	to avoid problems on non-POSIX systems.
	* eval.c (EvalInitialise): open gnubg.wd in binary mode, to
 	avoid problems on non-POSIX systems.

Fri Apr  7 09:13:50 2000  Gary Wong  <gary@cs.arizona.edu>

	* play.c (ComputerTurn): return a value after abort(), to pacify
	compiler warnings.
	(NextTurn): add parentheses to pacify compiler.

Sat Mar 11 20:10:36 2000  Gary Wong  <gary@cs.arizona.edu>

	* eval.c (DumpContact): Show the partial derivates of the
	equity with respect to the inputs shown.

Tue Mar  7 10:06:32 2000  Gary Wong  <gary@cs.arizona.edu>

	* xboard.c (BoardPointer): Use PointerMotionHintMask to make sure
	we don't lag behind drawing dragging chequers.

	* eval.c (TrainPosition): Fix stupid syntax error in yesterday's
	change.

Mon Mar  6 10:27:44 2000  Gary Wong  <gary@cs.arizona.edu>

	* configure.in: Use $datadir (not $pkgdatadir) to find installation
	path.  $pkgdatadir is an automake invention; configure doesn't know
	about it.

	* eval.c (TrainPosition): Calculate alpha based on the correct net.
	* database.c (CommandDatabaseDump): Fix spelling mistake.

Sun Mar  5 14:56:42 2000  Joseph Heled  <pepe@internet.co.nz>

	* eval.c: Disable BPG net until I figure if there is a way to get rid
	of the discontinuities between the two nets. Evaluation is less
	accurate in absolute terms, but generates less incorrect moves.
	
	With the latest weights, gnu vs. pub is 0.66 ppg.
	
	'The score (after 4000 games) is: gnubg 4430, pubeval 1790
	(money session (without Jacoby rule))'

Mon Feb 28 17:41:54 2000  Joseph Heled  <pepe@internet.co.nz>

	* eval.c (CalculateHalfInputs): changed evaluation inputs. see
	comments in code. New net is required, so I changed weights version
	as well.

Sun Feb 20 17:39:07 2000  Gary Wong  <gary@cs.arizona.edu>

	* rollout.c (Rollout): Correct standard error calculation; use
	Sam Pottle's recurrence relation to compute variance incrementally.

	* play.c (NextTurn): Avoid blocking SIGINTs entirely.  If NextTurn
	is always called , it can safely check for SIGINTs itself when the
	board is in a consistent state.
	* gnubg.c (NextTurnNotify, main): Always call NextTurn, even if
	interrupted.  NextTurn now exits as soon as possible if an interrupt
	is pending.

	* gnubg.c (main) [!X_DISPLAY_MISSING]: Don't attempt to start X if
	$DISPLAY is not set.

Sat Feb 19 19:27:23 2000  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (main): Call PromptForExit when reading EOF from stdin.

	* gnubg.c (PromptForExit): Set fInterrupt to FALSE.

	* play.c (ComputerTurn, NextTurn): Correct buggy SIGINT processing.
	ComputerTurn should block SIGINTs and test fInterrupt only when
	blocked.  NextTurn should unblock SIGINTs.
	* gnubg.c (ResetInterrupt): Don't unblock SIGINTs; that's
	NextTurn()'s job.

Sat Feb 19 14:27:28 2000  Gary Wong  <gary@cs.arizona.edu>

	* Makefile.am: Added TESTS, for "make check" (and "make distcheck").
	* gnubgtest: New file, for self-test.

	* eval.c (EvalInitialise): Add parameter `szDir' to specify
	additional directory to search for weight/bearoff databases.
	All callers changed.
	* gnubg.c (main): Add option `--datadir' (-d).

Fri Feb 18 19:49:35 2000  Gary Wong  <gary@cs.arizona.edu>

	* xgame.c (StatsMove): Remove superfluous parameters.  Caller changed.

Thu Feb 17 20:10:10 2000  Gary Wong  <gary@cs.arizona.edu>

	* xboard.c (BoardPointer): Fix test of pgd->fDragColour when using
	button 2 or 3 to bear off (this didn't word for red).

	* eval.c (SaveMoves): When fPartial is TRUE, and a later move using
	more pips or moves is found to result in the same position as an
	earlier one (which can happen bearing off the last chequer), update
	the old move.

Wed Feb 16 14:48:16 2000  Gary Wong  <gary@cs.arizona.edu>

	* dice.c, set.c [!HAVE_LIBDL]: Add `#if HAVE_LIBDL' conditions to
	some UserRNG calls that were causing problems if libdl was not
	available.
	
	* gnubg.c (GenerateKeywords) [HAVE_LIBREADLINE, X_DISPLAY_MISSING]: Set
 	fReadingOther correctly when using readline but not X.

Wed Feb 16 10:28:51 2000  Joseph Heled  <pepe@internet.co.nz>

	* eval.c (FindBestMovePlied): Set a minimum tolerance for ply 0.
	The differences between 1 and 0ply are sometimes large enough so that a
	small tolerance eliminates the better moves.
	Those situations are more likely to happen when different moves are
	evaluated with different neural nets. This is a drawback of using
	several neural nets, and we probably want a better solution in the
	future.

Sun Feb 13 18:28:18 2000  Joseph Heled  <pepe@internet.co.nz>

	* eval.c (barPrimeBackGame): fix a serious bug. Some non BPG positions
	are classified as such.

Fri Feb  4 10:00:39 2000  Gary Wong  <gary@cs.arizona.edu>

	* set.c (CommandSetDelay): Warn that delays will have no effect
	if "set display" is off.
	
	* rollout.c (Rollout): Show current results while performing
	rollouts.
	
	* gnubg.c (PortableSignal, PortableSignalRestore): New functions.
	(ShellEscape): New function.  Handle X events while waiting for
	child.

	* play.c (ResetDelayTimer): New function.  Correctly handle
	"set delay" pauses.

	* configure.in, config.h.in: add --with-readline and --with-gdbm
	options.  Try linking with termcap, ncurses or curses for readline.
	
	* backgammon.h: #include <list.h>, even if not using X.

Thu Feb  3 09:36:22 2000  Gary Wong  <gary@cs.arizona.edu>

	* play.c (ShowAutoMove): New function.
	(NextTurn): Handle X events while pausing for "set delay".

Wed Feb  2 14:34:22 2000  Gary Wong  <gary@cs.arizona.edu>

	* set.c (CommandSetAutoDoubles): Correct output for cAutoDoubles = 0.

Tue Feb  1 21:28:41 2000  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (HandleInputRecursive, GetInput): Ask for confirmation
	before exiting on EOF from stdin, when appropriate.
	(PromptForExit): New function.
	* database.c, gnubg.c, rollout.c: Don't show progress reports
	if stdout isn't a TTY.

Mon Jan 31 21:25:20 2000  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (HandleCommand): Handle "!" as shell escape.

Mon Jan 31 10:43:48 2000  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (ResetInterrupt): New function.
	(ProcessInput): New function.
	(HandleInputRecursive): New function.
	(UserCommand): New function.  Handles non-TTY commands (e.g. input
	from board window), and echos them to TTY.
	(GetInput): New function.  Reads input from TTY below the top level.
	* play.c (NewGame): Abort new game if interrupted during the opening
	roll.
	(ComputerPlayer): Block SIGINTs if anBoard is going to be updated,
	so that the end of the move is atomic.
	(CommandNewGame): Ask "are you sure" if game already in progress.
	
	* dice.c (RollDice): Can now be interrupted (and return error).  All
	callers changed.
	(GetManualDice): Use GetInput to read dice, and return error on
	interrupt.

Thu Jan 27 17:34:45 2000  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c [HAVE_SYS_FILE_H]: #include <sys/file.h> if present, to
	get FASYNC (required on Solaris).

Wed Jan 19 09:59:02 2000  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (HandleIO): Handle X events asynchronously.  Many other
	small related changes.

Mon Jan 17 15:25:14 2000  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (CommandRollout): Label the standard error as such, rather
	than standard deviation (not quite the same thing).

	* rollout.c (VarRednRollout): Do not invert evaluation after calling
	BearoffRollout (BearoffRollout already correctly adjusts for which
	player is on roll).
	(BasicRollout): Add parameter pec to correctly handle cases with
	lookahead but no variance reduction.
	
Sun Jan 16 11:44:10 2000  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (GenerateKeywords, CommandHelp): Don't list commands with
	no help string (e.g. "r", as abbreviation for "roll") in the help
	or completion list.

	* gnubg.c (HandleInput, StdinReadNotify, NextTurnNotify): Fix
	bugs in prompt handling.

Sat Jan 15 19:00:40 2000  Gary Wong  <gary@cs.arizona.edu>

	* play.c (NewGame) [!X_DISPLAY_MISSING]: Show board after opening
	roll.

	* play.c, gnubg.c: Reorganised NextTurn() to avoid recursion.
	Code should now call TurnDone() (which will return immediately)
	to schedule the next turn.  This should simplify event handler
	implementation and allow better input handling.
	
	* play.c (CommandRoll): Give error message if it's the computer's
	turn.
	(ComputerTurn): Don't roll the dice when making a take decision.
	(NextTurn): Don't apply fAutoRoll to computer turns.
	
Sat Jan 15 18:04:43 2000  Gary Wong  <gary@cs.arizona.edu>

	* database.c, gnubg.c, backgammon.h: Give error message in
	CommandDatabaseRollout if libgdbm is not available.

	* play.c (CommandMove): Fix bug bearing off against opponent on bar.

	* set.c (CommandSetTurn) [!X_DISPLAY_MISSING]: Show board after
	setting turn.

Sat Jan 15 16:56:27 2000  Joseph Heled  <pepe@internet.co.nz>

	* gnubg.c, backgammon.h: add '#if HAVE_LIBGDBM' around
        CommandDatabaseRollout

Fri Jan 14 21:18:37 2000  Gary Wong  <gary@cs.arizona.edu>

	* set.c, show.c: Added commands to control rollout parameters.

	* database.c: Renamed CommandDatabaseEvaluate to
	CommandDatabaseRollout.

	* set.c, gnubg.c, eval.c: Added "evalcontext" parameter to
	several evaluation calls.  The settings for each kind of evaluation
	(per player, for rollouts, for "eval" and "hint", etc.) are now
	maintained separately -- e.g. "set player 0 evaluation plies 1",
	"set rollout evaluation tolerance 0.2", "set evaluation candidates 6".

Thu Jan 13 22:20:11 2000  Gary Wong  <gary@cs.arizona.edu>

	* drawboard.c (ParseMove): Fixed off-by-one bug in bit mask fl,
	which caused moves like 13/12*/11 to fail (reported by Jared
	Riley).

	* rollout.c (Rollout): Added parameter fVarRedn.
	(BearoffRollout, BasicRollout, VarRednRollout): Old function
	RolloutGame split into 3.

	* show.c (CommandShowAutomatic, CommandShowEvaluation): Show
	current settings.
	* drawboard.c (FormatMovePlain): Reinstate the ugly FormatMove,
	for saving `.mat' files.

Wed Jan 12 23:29:59 2000  Joseph Heled  <pepe@internet.co.nz>

	* eval.c, eval.h: Added another net for special contact positions.

Wed Jan 12 21:08:03 2000  Gary Wong  <gary@cs.arizona.edu>

	* set.c (CommandSetEvalCandidates, CommandSetEvalTolerance,
	CommandSetNackgammon): New functions.
	* gnubg.c (ParseReal): New function.
	(InitBoard): Use the Nackgammon starting position if requested.
	* eval.c (FindBestMove): Use variables nSearchCandidates and
	rSearchTolerance.

Wed Jan 12 14:51:37 2000  Gary Wong  <gary@cs.arizona.edu>

	* show.c (CommandShowCopying, CommandShowWarranty, ShowPaged): New
	functions.
	* copying.c: New file.

Tue Jan 11 21:42:53 2000  Gary Wong  <gary@cs.arizona.edu>

	* play.c (CommandTake): Fix bug when accepting beavers -- the owner
	of the cube after an (eventual) take should be the opponent of the
	_original_ doubler, which is not necessarily the player who finally
	accepted.

	* drawboard.c (ParseMove): New function.
	(FormatMove): Generate prettier output (e.g. "24/13" or "24/18*/13"
	rather than "24/18 18/13").

Mon Jan 10 22:18:55 2000  Gary Wong  <gary@cs.arizona.edu>

	* play.c (NextTurn): Don't show the board if fDisplay is not set.

	* rollout.c (RolloutGame): Don't attempt variance reduction when doing
	0-ply evaluations.
	(Rollout): Fix standard deviation calculation (we want the standard
	error in the estimated mean; the code was calculating the population
	standard deviation).
	
Sat Jan  8 23:33:18 2000  Gary Wong  <gary@cs.arizona.edu>

	* show.c (CommandShowPipCount): Take an optional position ID parameter.

	* gnubg.c (main): Make --version list optional features supported.
	Use XResourceManagerString instead of requesting property manually.

	* positionid.c (CheckPosition): New function.
	(PositionFromKey, PositionFromID): Fail if the position specified
	is illegal.

	* eval.c (DumpBearoff1): Wrote function.

	* eval.c (SanityCheck): Don't evaluate more backgammons than gammons.

	* gnubg.c: Jacoby rule defaults to off (until we have proper cube
	evaluations).

	* play.c (NextTurn): Partially implemented delay (some problems
	remaining).
	* set.c (CommandSetDelay): New function.

	* set.c (CommandSetCubeUse, CommandSetJacoby): Print warnings if
	the user tries to enable the Jacoby rule and disable cube use.
	
	* gnubg.c (main): add rl_callback_handler_remove to the atexit list.
	
	* xboard.c (BoardPoint, BoardPointer): Allow clicking on the cube to
	double.

2000-01-09  Joern Thyssen  <jth@localhost.localdomain>

	* play.c (ComputerTurn): Call Utility for calculation of equity
	when determining whether to accept resignation or not.

2000-01-09  Joern Thyssen  <jth@localhost.localdomain>

	* eval.c (DumpPosition): Call Utility for calculation of equity. 

Sat Jan  8 14:16:08 2000  Gary Wong  <gary@cs.arizona.edu>

	* xgame.c (StatsMove, StatsConfirm): Keep a list of legal
	moves from the current position.  Display whether the user's
	move is incomplete, complete, or illegal.
	* xgame.h, xgame.c (GameSet, GameSetBoard): Old GameSetBoard
	renamed to GameSet; old GameSet deleted.
	* eval.c (SaveMoves, GenerateMovesSub, GenerateMoves): added
	parameter fPartial, and include incomplete moves in the list
	if set.
	* positionid.c, positionid.h (EqualBoards): New function.
	
	* set.c (CommandSetCubeCentre, CommandSetCubeOwner,
	CommandSetCubeValue): New functions.
	
	* set.c (CommandSetCubeUse): If the cube had been offered and
	cube use is being disabled, go back to the player on roll.
	
	* gnubg.c (main): Initialise the players' names to "gnubg" and
	the user's login name.
	* gnubg.c (ShowBoard): Label the players' names with X or O in the
	ASCII board.

Fri Jan  7 21:14:19 2000  Gary Wong  <gary@cs.arizona.edu>

	* xgame.c (GameHandler): Forward keyboard input in the board window
	on to the window specified by $WINDOWID (if any), so that the user
	can type data into the controlling xterm (or similar) while focus
	is on the board window.

Thu Jan  6 22:07:28 2000  Gary Wong  <gary@cs.arizona.edu>

	* makeweights.c: New file.
	* eval.c (EvalInitialise): read binary weights if available.
	* gnubg.c (main): attempt reading binary weights `gnubg.wd';
	don't read any weights if -n (--no-weights) specified.

Wed Jan  5 22:20:09 2000  Gary Wong  <gary@cs.arizona.edu>

	* play.c (NextTurn): ignore gammons when appropriate under the
	Jacoby rule.
	
	* gnubg.c (ShowBoard): when no game is in progress under X, display
	an empty board window.
	
	* set.c (CommandSetCubeUse): New function.
	* gnubg.c (SetToggle): Add "enabled" and "disabled" (along with
	yes/no, on/off, true/false).
	
	* play.c (NextTurn): Don't autoroll if the opponent has just
	doubled.
	
	* set.c (CommandSetAutoDoubles): New function.
	* play.c (NewGame): Apply automatic doubles when appropriate.

Mon Jan  3 21:13:22 2000  Gary Wong  <gary@cs.arizona.edu>

	* dice.c (InitRNG): Use /dev/random for initial seed if possible.
	* set.c (SetRNG): Don't call CommandSetSeed() when changing
	to manual dice.

Mon Jan  3 03:13:02 2000  Gary Wong  <gary@cs.arizona.edu>

	* xgame.c (StatsMove): call StatsUpdateBoardID earlier, so that the
	position ID will still be updated even if more than 4 moves are
	made.  (This is only temporary -- a better move routine should
	be written anyway.)

Sun Jan  2 11:35:41 2000  Gary Wong  <gary@cs.arizona.edu>

	* eval.c (EvalCacheResize): New function.

Fri Dec 24 01:12:54 1999  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (CommandRollout): use Rollout()'s equity standard
	deviation, rather than (incorrectly) trying to calculate it.
	* rollout.c (Rollout): calculate equity standard deviation.
	Also fix bug which would sometimes return NaN standard deviation.

Thu Dec 23 18:45:31 1999  Gary Wong  <gary@cs.arizona.edu>

	* play.c (CommandNewGame): fix bug in assert() -- the game is at
	lMatch.plPrev->p, not lMatch.plPrev.  Also, do not free plGame
	after calling FreeGame(); FreeGame() already does it.

Mon Dec 20 17:33:06 1999  Gary Wong  <gary@cs.arizona.edu>

	* play.c (TryBearoff): New function.
	* set.c (CommandSetAutoBearoff): New function.

Mon Dec 20 15:05:19 1999  Joseph Heled  <pepe@internet.co.nz>

	* eval.c (SanityCheck): Insure gammons rate is less than win rate
	This is rare, but can happen:
	
	(gnubg) eval wQhBvjEW/2MAAA
        Win     W(g)    W(bg)   L(g)    L(bg)   Equity
        static: 0.896   0.918   0.026   0.021   0.005   (+1.711)
         1 ply: 0.853   0.888   0.024   0.028   0.005   (+1.585)

Sun Dec 19 22:57:49 1999  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (SaveGame, CommandSaveMatch): finished saving.
	* eval.c (SaveMoves): store all bearoff moves as destination
	point 0 (previous patch to do this was incomplete).
	
	* play.c (FreeGame): New function.
	* play.c (FreeMatch): New function.

Sun Dec 19 19:52:09 1999  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (HandleCommand): Allow "b" and "ba" as abbreviations
	for "bar".

Mon Dec 20 16:19:21 1999  Joern Thyssen  <joern@thyssen.nu>

	* xgame.c (StatsSet): nMatchTo == 0 is now money session.
	* gnubg.c (ShowBoard): nMatchTo == 0 is now money session.
	Added variables and set- and show-functions for 
	Crawford game, post-Crawford play, and Jacoby play.
	* set.c (CommandSetJacoby, CommandSetCrawford, 
	CommandSetPostCrawford): New functions.
	* show.c (CommandShowJacoby, CommandShowCrawford, 
	CommandShowPostCrawford): New functions.
	* play.c (CommandNewMatch, CommandNewSession): initialize 
	new variables.
	(Nextturn): changed code used if fAutoGame.

Sat Dec 18 20:37:32 1999  Gary Wong  <gary@cs.arizona.edu>

	* set.c (CommandSetPrompt): New function.
	* gnubg.c (FormatPrompt): New function.
	* eval.c (PipCount): New function.

Sat Dec 18 15:02:32 1999  Gary Wong  <gary@cs.arizona.edu>

	* xgame.c (StatsUpdateBoardID): New function.  Display board
	ID in window.

Fri Dec 17 09:14:13 1999  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (usage): "--help" option now mentions "help" command
	within gnubg.

Thu Dec 16 18:11:41 1999  Gary Wong  <gary@cs.arizona.edu>

	* xboard.c (BoardPointer): Fixed bug which prevented bearing off
	with Button2 or Button3 with exactly the right number.

Wed Dec 15 19:48:10 1999  Gary Wong  <gary@cs.arizona.edu>

	* xboard.c (BoardPointer): Allow clicking Button2 or Button3 on
	chequers to move pieces the number of pips showing on the dice,
	and clicking Button2 or Button3 on the dice to swap the dice.

Wed Dec 15 15:25:23 1999  Joern Thyssen  <joern@thyssen.nu>

        * userrng.c: New file. Template for a user supplied RNG,
        includes code for fetching random numbers from www.random.org.

        * gnubg.c: Added support for user and manual RNG.
	Added function CommandShowRNG.
	Fixed missing options to getopt_long
	(option --tty did not work).

	* dice.c: Added support for user and manual RNG.

	* show.c: Added function CommandShowRNG.

	* set.c: Added support for user and manual RNG.

	* configure.in: Search for library 'dl' used for dynamic linking
	of user RNG.

	* config.h.in: Define HAVE_LIBDL

Fri Dec 10 18:19:16 1999  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c: Added lMatch and lGame data structures, and started
	implementing CommandSaveMatch, etc.

Thu Dec  9 17:24:14 1999  Gary Wong  <gary@cs.arizona.edu>

	* isaac.c: New file.  Added support for ISAAC dice generator.
	* dice.c: Added support for ISAAC.

Fri Dec  3 17:07:35 1999  Gary Wong  <gary@cs.arizona.edu>

	* dice.c: New file.  Adding support for other dice generators
	(ANSI, BSD and Mersenne Twister supported so far).

	* xgame.c (StatsMove): handle O's moves correctly (bug 100225).

	* set.c (CommandSetBoard): Display new board once it's set.

Thu Dec  2 18:16:21 1999  Gary Wong  <gary@cs.arizona.edu>

	* xgame.c (GameSetBoard): Fixed the display of player 0's pieces.
	Still some smaller cosmetic problems, but it works well enough to
	see.

Wed Dec  1 18:05:19 1999  Gary Wong  <gary@cs.arizona.edu>

	* database.c: New file.

Tue Nov 30 17:03:43 1999  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c: added --tty option to disable X operation, and made
	everything fall back to TTY if X fails.

	* eval.c (RolloutGame): added SanityCheck() so that variance
	reduction doesn't lead to illegal output.

Wed Nov 24 13:58:30 1999  Gary Wong  <gary@cs.arizona.edu>

	* eval.c (EvalInitialise): read weights and bearoff database from
	$pkgdatadir (defaults to /usr/local/share/gnubg/) if not found in
	current directory.

Tue Nov 23 15:58:39 1999  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c (usage): updated e-mail address.

	* eval.c (EvalInitialise): fall back to malloc() and read() if
 	mmap() fails.

Mon Nov 22 18:56:35 1999  Gary Wong  <gary@cs.arizona.edu>

	* gnubg.c: added global definition for (gnubg) prompt.
	[!HAVE_LIBREADLINE] Only display prompt if stdin is a TTY.

	* Added rudimentary X window system support.
	
	* pub_eval.c: Eliminated rdwts() and hard-coded wr[] and wc[] in
 	pub_eval.c.

	* set.c (CommandSetDice): Fixed setting dice for both players (bug
 	100122).

	* eval.c (EvalInitialise): now gives decent error messages (bug
 	100110).
	(FindBestMoves): fixed array overflow (bug 100114).
	(SaveMoves): store all bear off moves as destination point 0,
	even if the roll to bear off was more than necessary (bug 100150.)

Sat Jan 30 12:35:04 1999  Gary Wong  <gary@cs.arizona.edu>

	* Version 0.0 released.
